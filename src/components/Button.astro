---
const { label, dir, girar } = Astro.props
---
<button onclick={dir} class="hidden sm:block text-white bg-[#B11111] hover:bg-[#ee1818] focus:ring-4 focus:outline-none 
focus:ring-orange-300 font-bold rounded-full text-xs px-4 py-2 text-center buttonno">
    {label}
    <svg 
      fill="currentColor" 
      viewBox="0 0 24 24" 
      class={`icon ${girar === 'izquierda' ? 'rotate-left' : 'rotate-right'}`}>
        <path clip-rule="evenodd"
          d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm4.28 10.28a.75.75 0 000-1.06l-3-3a.75.75 0 10-1.06 1.06l1.72 1.72H8.25a.75.75 0 000 1.5h5.69l-1.72 1.72a.75.75 0 101.06 1.06l3-3z"
          fill-rule="evenodd"></path>
    </svg>
</button>
<style>
  .buttonno {
    position: relative;
    transition: all 0.3s ease-in-out;
    padding-inline: 1rem;
    background-color: #B11111;
    border-radius: 9999px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #ffff;
    gap: 7.5px;
    border: 2px solid #ffffff4d;
    outline: none;
    overflow: hidden;
    font-size: 14px;
  }

  .icon {
    width: 18px;
    height: 18px;
    transition: all 0.3s ease-in-out;
  }

  .rotate-right {
    transform: rotate(-90deg);
  }

  .rotate-left {
    transform: rotate(-90deg);
  }

  .buttonno:hover .rotate-right {
    transform: rotate(0deg);
  }

  .buttonno:hover .rotate-left {
    transform: rotate(-180deg);
  }

  .buttonno:hover {
    transform: scale(1.05);
    border-color: #fff9;
  }
</style>